# Even Fibonacci numbers
# Problem 2
# https://projecteuler.net/problem=2

# Each new term in the Fibonacci sequence is generated by adding the previous
# two terms.
# By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed
# four million, find the sum of the even-valued terms.

from src.lib.fibonacci import fibonacci_generator


def solve(limit: int = 4 * 10 ** 6) -> str:
    '''Problem 2 - Even Fibonacci numbers'''
    answer = 0
    for fib in fibonacci_generator():
        if fib > limit:
            break
        if fib % 2 == 0:
            answer += fib
    return str(answer)


def test_simplified_version() -> None:
    answer = solve(limit=100)
    assert type(answer) == str
    assert answer == str(2 + 8 + 34)


def test_answer() -> None:
    answer = solve()
    assert type(answer) == str
    assert answer == '4613732'


if __name__ == '__main__':
    print(solve())
